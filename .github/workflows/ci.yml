name: CI
on: push

jobs:
  Build:
    runs-on: ubuntu-latest
    steps:
        - name: send custom message with args
          uses: appleboy/telegram-action@master
          with:
            to: ${{ secrets.TELEGRAM_TO }}
            token: ${{ secrets.TELEGRAM_TOKEN }}
            args: Bypass Links test telegram message. 💩
  #     - name: Checkout repo 🛎️
  #       uses: actions/checkout@v2

  #     - name: Setting up Node.js 🔧
  #       uses: actions/setup-node@v2.1.5
  #       with:
  #         node-version: "12.x"

  #     - name: Cache 💾
  #       uses: actions/cache@v2.1.5
  #       with:
  #         path: ~/.npm
  #         key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
  #         restore-keys: |
  #           ${{ runner.os }}-node-

  #     - name: Install dependencies 🧼
  #       run: npm install && npm run bootstrap

  #     - name: Building 🛠
  #       run: npm run client:release

  #     - name: Upload artfacts 🎨
  #       uses: actions/upload-artifact@v2
  #       with:
  #         name: build
  #         path: ./client/build/

  # E2E:
  #   runs-on: ubuntu-latest
  #   needs: [Build]
  #   if: ${{ github.ref == 'refs/heads/main' }}
  #   steps:
  #     - name: Checkout repository 🛎️
  #       uses: actions/checkout@v2

  #     - name: Install dependencies 🧼
  #       run: npm install && npm run bootstrap
  #       env:
  #         HOST_NAME: https://bypass-links.netlify.app

  #     - name: Download artifacts 🎨
  #       uses: actions/download-artifact@v2
  #       with:
  #         name: build
  #         path: ./client/build/

  #     - name: Deploy to Netlify Staging 💠
  #       uses: netlify/actions/cli@master
  #       env:
  #         NETLIFY_SITE_ID: ${{ secrets.NETLIFY_STG_SITE_ID }}
  #         NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
  #       with:
  #         args: deploy --prod

  #     - name: Run Cypress 🧪
  #       uses: cypress-io/github-action@v2
  #       with:
  #         browser: chrome
  #         headless: true
  #         record: true
  #         parallel: true
  #         working-directory: E2E
  #       env:
  #         CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # Release:
  #   runs-on: ubuntu-latest
  #   needs: [E2E]
  #   if: ${{ github.ref == 'refs/heads/main' }}
  #   steps:
  #     - name: Checkout repo 🛎️
  #       uses: actions/checkout@v2

  #     - name: Download artifacts 🎨
  #       uses: actions/download-artifact@v2
  #       with:
  #         name: build
  #         path: ./client/build/

  #     - name: Generate Release Tag 🏷
  #       uses: amitsingh-007/next-release-tag@v1.0.0
  #       with:
  #         github_token: ${{ secrets.GITHUB_TOKEN }}

  #     - name: Generate changelog 🧾
  #       id: changelog
  #       uses: metcalfc/changelog-generator@v1.0.0
  #       with:
  #         myToken: ${{ secrets.GITHUB_TOKEN }}

  #     - name: Create Release ✒
  #       id: create_release
  #       uses: actions/create-release@v1
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       with:
  #         tag_name: ${{ env.release_tag }}
  #         release_name: Release ${{ env.release_tag }}
  #         body: ${{ steps.changelog.outputs.changelog }}
  #         draft: false
  #         prerelease: false

  #     - name: Get Release Asset Name 🗃
  #       id: get_release_asset_name
  #       run: |
  #         file=$(find ./client/build/bypass-links-*.zip  -printf "%f\n")
  #         echo "::set-output name=asset_name::$file"

  #     - name: Upload Release Asset ☁
  #       uses: actions/upload-release-asset@v1
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       with:
  #         upload_url: ${{ steps.create_release.outputs.upload_url }}
  #         asset_path: ./client/build/${{ steps.get_release_asset_name.outputs.asset_name }}
  #         asset_name: ${{ steps.get_release_asset_name.outputs.asset_name }}
  #         asset_content_type: application/zip

  # Deploy:
  #   runs-on: ubuntu-latest
  #   needs: [Release]
  #   if: ${{ github.ref == 'refs/heads/main' }}
  #   steps:
  #     - name: Checkout repo 🛎️
  #       uses: actions/checkout@v2

  #     - name: Setting up Node.js 🔧
  #       uses: actions/setup-node@v2.1.5
  #       with:
  #         node-version: "12.x"

  #     - name: Cache 💾
  #       uses: actions/cache@v2.1.5
  #       with:
  #         path: ~/.npm
  #         key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
  #         restore-keys: |
  #           ${{ runner.os }}-node-

  #     - name: Install dependencies 🧼
  #       run: npm install && npm run bootstrap

  #     - name: Download artifacts 🎨
  #       uses: actions/download-artifact@v2
  #       with:
  #         name: build
  #         path: ./client/build/

  #     - name: Deploy to Netlify Production 💠
  #       uses: netlify/actions/cli@master
  #       env:
  #         NETLIFY_SITE_ID: ${{ secrets.NETLIFY_PROD_SITE_ID }}
  #         NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
  #       with:
  #         args: deploy --prod

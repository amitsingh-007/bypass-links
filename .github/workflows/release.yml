name: Deploy CI
on:
  push:
    branches:
      - "main"

jobs:
  Build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo 🛎️
        uses: actions/checkout@v2

      - name: Setting up Node.js 🔧
        uses: actions/setup-node@v2.1.5
        with:
          node-version: "14.x"

      - name: Cache 💾
        uses: actions/cache@v2.1.6
        with:
          path: |
            ~/.npm
            **/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: NextJS Cache 💾
        uses: actions/cache@v2
        with:
          path: ${{ github.workspace }}/web/.next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}

      - name: Install dependencies 🧼
        run: npm install && npm run bootstrap

      - name: Building 🛠
        run: npm run build

      - name: Upload extension 🌐
        uses: actions/upload-artifact@v2
        with:
          name: extension-file
          path: ./extension/extension-build/bypass-links-*.zip

  Create_Release:
    runs-on: ubuntu-latest
    needs: [Build]
    steps:
      - name: Download artifacts 🎨
        uses: actions/download-artifact@v2
        with:
          name: extension-file
          path: ./extension/extension-build/

      - name: Generate Release Tag 🏷
        uses: amitsingh-007/next-release-tag@v1.0.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate changelog 🧾
        id: changelog
        uses: metcalfc/changelog-generator@v1.0.0
        with:
          myToken: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Release ✒
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.release_tag }}
          release_name: Release ${{ env.release_tag }}
          body: ${{ steps.changelog.outputs.changelog }}
          draft: false
          prerelease: false

      - name: Get Release Asset Name 🗃
        id: get_release_asset_name
        run: |
          file=$(find ./extension/extension-build/bypass-links-*.zip  -printf "%f\n")
          echo "::set-output name=asset_name::$file"

      - name: Upload Release Asset ☁
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./extension/extension-build/${{ steps.get_release_asset_name.outputs.asset_name }}
          asset_name: ${{ steps.get_release_asset_name.outputs.asset_name }}
          asset_content_type: application/zip

  Deploy:
    runs-on: ubuntu-latest
    needs: [Create_Release]
    steps:
      - name: Checkout repo 🛎️
        uses: actions/checkout@v2

      - name: Setting up Node.js 🔧
        uses: actions/setup-node@v2.1.5
        with:
          node-version: "14.x"

      - name: Start deployment 🚀
        uses: bobheadxi/deployments@v0.6.0
        id: deployment
        with:
          step: start
          token: ${{ secrets.GITHUB_TOKEN }}
          env: Production

      - name: Deploy (Vercel) 🔺
        uses: amondnet/vercel-action@v20
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID}}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID}}
          vercel-args: "--prod"

      - name: Finish deployment 🌙
        uses: bobheadxi/deployments@v0.6.0
        if: always()
        with:
          step: finish
          token: ${{ secrets.GITHUB_TOKEN }}
          status: ${{ job.status }}
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}
          env_url: ${{ steps.vercel-action.outputs.preview-url }}

      # - name: Deploy (Netlify) 💠
      #   uses: netlify/actions/cli@master
      #   env:
      #     NETLIFY_SITE_ID: ${{ secrets.NETLIFY_PROD_SITE_ID }}
      #     NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
      #   with:
      #     args: deploy --prod

      - name: Notify Admins 📱
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          args: Release succesful. Check the latest version on https://bypass-links.vercel.app/. 🎉🥳
